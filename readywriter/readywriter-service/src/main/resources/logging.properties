## See conf/logging.properties
## See java.base/sun/util/logging/PlatformLogger.java
##
## Consider using -Djava.util.logging.config.file=/path/to/logging.properties


## The root logger (the Logger named "") level (java.util.logging.LogManager):
# .level=INFO
## The handlers of the root Logger (java.util.logging.LogManager):
# handlers=java.util.logging.ConsoleHandler,java.util.logging.FileHandler


## A logger properties (java.util.logging.LogManager):
org.zzzyxwvut.readywriter.service.Support.level=INFO
org.zzzyxwvut.readywriter.service.Support.handlers=java.util.logging.ConsoleHandler
# org.zzzyxwvut.readywriter.service.Support.handlers.ensureCloseOnReset=false
org.zzzyxwvut.readywriter.service.Support.useParentHandlers=false


## The format string (java.util.logging.SimpleFormatter#format(LogRecord)):
##
## The given LogRecord will be formatted as if by calling:
## String.format(format, zonedDateTime, source, logger, level, message, thrown)
##		"%...",	1$,		2$,	3$,	4$,	5$,	6$
## (See java.base/java.util.Formatter)
java.util.logging.SimpleFormatter.format=%1$tT.%<tN %4$s [%3$s] %5$s%n%6$s


## A handler properties (java.util.logging.ConsoleHandler):
java.util.logging.ConsoleHandler.level=INFO
# java.util.logging.ConsoleHandler.filter=
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.encoding=UTF-8
